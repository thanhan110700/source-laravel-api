{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Kozocom Laravel API docs",
        "description": "This is a sample API docs for Kozocom Laravel application",
        "contact": { "email": "xinhnd@kozo-japan.com" },
        "license": {
            "name": "MIT"
        }
    },
    "servers": [
        {
            "url": "http://localhost/api/v1",
            "description": "local",
            "variables": {}
        },
        {
            "url": "https://api.stg.ducxinh-example.com",
            "description": "staging"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Everything about your Auth",
            "externalDocs": {
                "description": "Find out more about Auth",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "Users",
            "description": "Operations about Users",
            "externalDocs": {
                "description": "Find out more about user",
                "url": "http://swagger.io"
            }
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "Login",
                "description": "This is a description",
                "operationId": "authLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "password"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "example": {
                                    "email": "admin@admin.com",
                                    "password": "secret"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "access_token": "7|QWhw0K9JzThnGeciRYBSR3Zb4mxLLyYIiiwFwdKJ"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "code": 400,
                                    "message": "These credentials do not match our records.",
                                    "errors": {
                                        "email": [
                                            "These credentials do not match our records."
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "Logout",
                "description": "Logout",
                "operationId": "authLogout",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["refreshToken"],
                                "properties": {
                                    "refreshToken": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                                }
                            }
                        }
                    }
                },
                "security": [{ "bearerAuth": [] }],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "code": 401,
                                    "message": "Unauthenticated"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": ["Auth"],
                "summary": "Forgot password",
                "description": "An email will be sent to reset password.",
                "operationId": "authForgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "example": {
                                    "email": "fake@example.com"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": ["Auth"],
                "summary": "Reset password",
                "description": "Reset password",
                "operationId": "authResetPassword",
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The reset password token"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["password"],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "description": "At least one number and one letter",
                                        "minLength": 8
                                    }
                                },
                                "example": {
                                    "password": "password1"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Password reset failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "code": 401,
                                    "message": "Password reset failed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": ["Users"],
                "summary": "List all Users",
                "description": "This is a description",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Users"],
                "summary": "Create a user",
                "description": "This is a description",
                "operationId": "createUser",
                "security": [{ "bearerAuth": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "example": {
                                    "code": 400,
                                    "message": "The request is invalid",
                                    "error": true,
                                    "errors": {
                                        "email": [
                                            "The email address already taken"
                                        ],
                                        "name": ["The name field is required."]
                                    }
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": ["Users"],
                "summary": "Detail a User",
                "description": "This is a description",
                "operationId": "showUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the User to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expected response to a valid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Users"],
                "summary": "Update a User",
                "description": "This is a description",
                "operationId": "updateUser",
                "consumes": ["application/json", "application/xml"],
                "produces": ["application/json", "application/xml"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The id of the User to retrieve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    }
                },
                "responses": {
                    "400": { "$ref": "#/components/responses/BadRequest" },
                    "404": { "$ref": "#/components/responses/NotFound" }
                },
                "security": [
                    { "Userstore_auth": ["write:Users", "read:Users"] }
                ]
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Delete a User",
                "description": "This is a description",
                "operationId": "deleteUser",
                "produces": ["application/json", "application/xml"],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "404": { "$ref": "#/components/responses/NotFound" },
                    "200": { "$ref": "#/components/responses/SuccessRequest" }
                },
                "security": [
                    { "Userstore_auth": ["write:Users", "read:Users"] }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "SuccessRequest": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": ["code", "message"],
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "success": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "example": {
                            "code": 200,
                            "message": "Success",
                            "success": true
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "code": 404,
                            "message": "Not Found"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "code": 403,
                            "message": "Forbidden"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "code": 401,
                            "message": "Please authenticate"
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "example": {
                            "code": 400,
                            "message": "The request is invalid",
                            "error": true,
                            "errors": {
                                "email": ["The email field is required."],
                                "name": ["The name field is required."]
                            }
                        }
                    }
                }
            }
        },
        "schemas": {
            "Token": {
                "type": "object",
                "properties": {
                    "token": { "type": "string" },
                    "expires": { "type": "string", "format": "date-time" }
                },
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg",
                    "expires": "2020-05-12T16:18:04.793Z"
                },
                "xml": { "name": "Token" }
            },
            "AuthTokens": {
                "type": "object",
                "properties": {
                    "access": {
                        "$ref": "#/components/schemas/Token"
                    },
                    "refresh": {
                        "$ref": "#/components/schemas/Token"
                    }
                },
                "xml": { "name": "Token" }
            },
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "code": { "type": "integer", "format": "int32" },
                    "type": { "type": "string" },
                    "message": { "type": "string" }
                }
            },
            "Error": {
                "type": "object",
                "required": ["code", "message"],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "error": {
                        "type": "boolean"
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "example": {
                    "code": 500,
                    "message": "Internal Server Error",
                    "error": true
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "format": "int64" },
                    "name": { "type": "string" },
                    "email": { "type": "string", "format": "email" },
                    "role": { "type": "string" }
                },
                "example": {
                    "id": "5ebac534954b54139806c112",
                    "email": "fake@example.com",
                    "name": "fake name",
                    "role": "user"
                },
                "xml": { "name": "User" }
            },
            "UserInput": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "email": { "type": "string", "format": "email" },
                    "password": { "type": "string", "minLength": 8 },
                    "role": { "type": "string" }
                },
                "example": {
                    "name": "fakename",
                    "email": "fake@example.com",
                    "password": "password",
                    "role": "user"
                },
                "required": ["name", "email", "password"],
                "xml": { "name": "User" }
            },
            "Pagination": {
                "type": "object",
                "properties": {
                    "current_page": { "type": "integer" },
                    "from": { "type": "integer" },
                    "last_page_url": { "type": "string" },
                    "next_page_url": { "type": "string" },
                    "path": { "type": "string" },
                    "per_page": { "type": "integer" },
                    "prev_page_url": { "type": "string" },
                    "to": { "type": "integer" },
                    "total": { "type": "integer" }
                },
                "example": {
                    "current_page": 1,
                    "from": 1,
                    "last_page": 1,
                    "last_page_url": "http://localhost/api/v1/users?page=1",
                    "next_page_url": null,
                    "path": "http://localhost/api/v1/users",
                    "per_page": 25,
                    "prev_page_url": null,
                    "to": 2,
                    "total": 2
                },
                "xml": { "name": "Pagination" }
            }
        }
    }
}
